plugins {
  id 'java'
  id 'application'
  id 'org.jetbrains.kotlin.jvm' version '1.9.23'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.beryx.jlink' version '2.25.0'
  id("com.google.devtools.ksp") version "1.9.23-1.0.19"
  id("org.jetbrains.kotlin.plugin.serialization") version "1.9.23"

}

group 'dev.AlejandroAitorJesusDiego'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.10.2'
}


tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

application {
  mainModule = 'dev.alejandroaitorjesusdiego.proyectoprogramacion3'
  mainClass = 'dev.alejandroaitorjesusdiego.proyectoprogramacion3.HelloApplication'
}
kotlin {
  jvmToolchain( 21 )
}

javafx {
  version = '21'
  modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
  // Logger
  implementation("org.lighthousegames:logging:1.3.0")
  implementation("ch.qos.logback:logback-classic:1.4.14")

  // BBDD H2
  implementation("com.h2database:h2:2.2.224")

  // JDBI
  // Reflexión
  implementation("org.jetbrains.kotlin:kotlin-reflect")
  // Core
  implementation("org.jdbi:jdbi3-core:3.48.0")
  // SQL Object
  implementation("org.jdbi:jdbi3-sqlobject:3.48.0")
  // Extensión para Kotlin
  implementation("org.jdbi:jdbi3-kotlin:3.48.0")
  // Extensión de SQL Object para Kotlin
  implementation("org.jdbi:jdbi3-kotlin-sqlobject:3.48.0")

  // Result
  implementation("com.michael-bull.kotlin-result:kotlin-result:2.0.0")

  // Kotlin Serialization Json
  implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0")

  // Kotlin Serialization XML
  implementation("io.github.pdvrieze.xmlutil:serialization-jvm:0.90.3")

  // Vaadin
  implementation("com.vaadin:open:8.5.0.4")

  // Caché Caffeine
  implementation("com.github.ben-manes.caffeine:caffeine:3.2.0")

  // Koin

  implementation("io.insert-koin:koin-core:4.0.2") // Core de Koin
  implementation("io.insert-koin:koin-annotations:2.0.0")
  ksp("io.insert-koin:koin-ksp-compiler:2.0.0")

 // JUnit
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

  // Jacoco
  implementation("org.jacoco:org.jacoco.core:0.8.12")
  testImplementation "org.jetbrains.kotlin:kotlin-test:1.9.23"

  // Reflexión de tipos genéricos, las versiones más recientes de JDBI no la incluyen por defecto
  implementation 'io.leangen.geantyref:geantyref:1.3.0'

  //BCrypt
  implementation("org.mindrot:jbcrypt:0.4")

  implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0")
}

test {
useJUnitPlatform()}

jlink {
  imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  launcher {
    name = 'app'
  }
}

jlinkZip {
  group = 'distribution'
}